import streamlit as st
import cv2
import pandas as pd
import numpy as np

# Load the color dataset
try:
    colors_df = pd.read_csv("colors.csv")
except FileNotFoundError:
    st.error("Error: 'colors.csv' not found. Please ensure it's in the same directory.")
    st.stop()

def get_color_name(R, G, B):
    """
    Function to calculate the closest color name from the dataset
    """
    minimum = 10000
    for i in range(len(colors_df)):
        d = abs(R - int(colors_df.loc[i, "R"])) + abs(G - int(colors_df.loc[i, "G"])) + abs(B - int(colors_df.loc[i, "B"]))
        if d <= minimum:
            minimum = d
            cname = colors_df.loc[i, "Name"]
    return cname

def main():
    st.title("Color Detection from Images")

    uploaded_file = st.file_uploader("Upload an Image...", type=["jpg", "jpeg", "png"])

    if uploaded_file is not None:
        # Read the image using OpenCV
        file_bytes = np.asarray(bytearray(uploaded_file.read()), dtype=np.uint8)
        img = cv2.imdecode(file_bytes, cv2.IMREAD_COLOR)
        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)  # Convert BGR to RGB

        st.image(img, caption="Uploaded Image.", use_column_width=True)

        # Get image dimensions
        height, width, _ = img.shape

        # Initialize color details
        color_name_text = st.empty()
        rgb_value_text = st.empty()
        color_display = st.empty()

        def handle_click(x, y):
            """
            Callback function to handle mouse clicks on the image.
            """
            B, G, R = img[y, x]  # OpenCV uses BGR
            color_name = get_color_name(R, G, B)
            color_name_text.text(f"Color Name: {color_name}")
            rgb_value_text.text(f"RGB Value: ({R}, {G}, {B})")
            color_display.markdown(
                f'<div style="background-color: rgb({R},{G},{B}); width: 50px; height: 50px;"></div>',
                unsafe_allow_html=True,
            )

        # Get click coordinates using Streamlit
        click_x = st.number_input("Click X Coordinate", min_value=0, max_value=width - 1, value=0)
        click_y = st.number_input("Click Y Coordinate", min_value=0, max_value=height - 1, value=0)

        if st.button("Get Color"):
            handle_click(click_x, click_y)

if __name__ == "__main__":
    main()
